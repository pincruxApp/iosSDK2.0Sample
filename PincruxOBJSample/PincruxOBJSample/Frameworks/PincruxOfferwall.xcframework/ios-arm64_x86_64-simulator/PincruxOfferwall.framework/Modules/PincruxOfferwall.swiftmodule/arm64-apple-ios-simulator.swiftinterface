// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7 (swiftlang-5.7.0.127.4 clang-1400.0.29.50)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PincruxOfferwall
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFAudio
import AVFoundation
import AdSupport
import AppTrackingTransparency
import Foundation
import Photos
import Swift
import SystemConfiguration
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
public enum PopupObserve {
  case Filter, Terms, SMS, none
  public static func == (a: PincruxOfferwall.PopupObserve, b: PincruxOfferwall.PopupObserve) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public enum PopupStyle {
  case SINGLE
  case SINGLE_G
  case DOUBLE
  public static func == (a: PincruxOfferwall.PopupStyle, b: PincruxOfferwall.PopupStyle) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public protocol TicketCustomPopupOptions {
  var popupStyle: PincruxOfferwall.PopupStyle { get }
  var okString: Swift.String { get }
}
extension PincruxOfferwall.TicketCustomPopupOptions {
  public var popupStyle: PincruxOfferwall.PopupStyle {
    get
  }
}
@objc public enum OfferwallType : Swift.Int {
  case BAR_TYPE, BAR_PREMIUM_TYPE, PREMIUM_TYPE
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum DarkMode : Swift.Int {
  case AUTO, LIGHT_ONLY, DARK_ONLY
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum ViewControllerType : Swift.Int {
  case NavigationPush, Modal, ViewType
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public enum OfferwallCategory : Swift.Int {
  case Finance, CPA, Social, CPS, None
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public protocol OfferwallViewTypeDelegate {
  @objc func offerwallInitSuccess()
  @objc func offerwallInitFailed(_ errCode: Swift.Int)
  @objc func offerwallReceived(_ offerwallView: UIKit.UIView)
}
@objc public protocol OfferwallPointDelegate {
  @objc func getAdPoint(_ point: PincruxOfferwall.OfferwallPointItems)
}
@objc public class OfferwallPointItems : ObjectiveC.NSObject {
  @objc public init(_ status: Swift.String, _ pubkey: Swift.Int, _ ad_coin1: Swift.Int, _ ad_coin2: Swift.Int, _ ad_coin3: Swift.Int, _ ad_coin4: Swift.Int, _ nowTime: Swift.Double)
  @objc public var financeCoin: Swift.Int {
    @objc get
  }
  @objc public var cpaCoin: Swift.Int {
    @objc get
  }
  @objc public var socialCoin: Swift.Int {
    @objc get
  }
  @objc public var cpsCoin: Swift.Int {
    @objc get
  }
  @objc deinit
}
public protocol PincruxTabMenuOptions {
  var font: UIKit.UIFont { get }
  var menuItemSize: PincruxOfferwall.TabMenuItemSize { get }
  var menuItemMargin: CoreFoundation.CGFloat { get }
  var menuTitleColor: UIKit.UIColor { get }
  var menuTitleSelectedColor: UIKit.UIColor { get set }
  var menuUnderLine: PincruxOfferwall.TabMenuUnderLineSet { get }
  var tabMenuBackgroundColor: UIKit.UIColor { get }
  var tabMenuContentInset: UIKit.UIEdgeInsets { get }
}
extension PincruxOfferwall.PincruxTabMenuOptions {
  public var tabMenuContentInset: UIKit.UIEdgeInsets {
    get
  }
}
public enum TabMenuItemSize {
  case fixed(width: CoreFoundation.CGFloat, height: CoreFoundation.CGFloat)
  case sizeToFit(minWidth: CoreFoundation.CGFloat, height: CoreFoundation.CGFloat)
}
extension PincruxOfferwall.TabMenuItemSize {
  public var width: CoreFoundation.CGFloat {
    get
  }
  public var height: CoreFoundation.CGFloat {
    get
  }
}
public enum TabMenuUnderLineSet {
  case underline(barColor: UIKit.UIColor, height: CoreFoundation.CGFloat)
}
public struct DefaultTabMenuOption : PincruxOfferwall.PincruxTabMenuOptions {
  public var menuItemSize: PincruxOfferwall.TabMenuItemSize {
    get
  }
  public var menuItemMargin: CoreFoundation.CGFloat {
    get
  }
  public var menuTitleColor: UIKit.UIColor {
    get
  }
  public var menuTitleSelectedColor: UIKit.UIColor {
    get
    set
  }
  public var menuUnderLine: PincruxOfferwall.TabMenuUnderLineSet {
    get
  }
  public var font: UIKit.UIFont {
    get
  }
  public var tabMenuBackgroundColor: UIKit.UIColor {
    get
  }
  public init()
}
public struct Random {
  public static func generate(_ upperBound: Swift.Int) -> Swift.Int
}
@_hasMissingDesignatedInitializers final public class AES256CBC {
  final public class func encryptString(_ str: Swift.String, iv: Swift.String, password: Swift.String) -> Swift.String?
  final public class func decryptString(_ str: Swift.String, password: Swift.String) -> Swift.String?
  final public class func generatePassword() -> Swift.String
  final public class func randomText(_ length: Swift.Int, justLowerCase: Swift.Bool = false, whitespace: Swift.Bool = false) -> Swift.String
  @objc deinit
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc public class PincruxOfferwallSDK : ObjectiveC.NSObject {
  @objc weak public var viewtypeDelegate: PincruxOfferwall.OfferwallViewTypeDelegate?
  @objc weak public var pointDelegate: PincruxOfferwall.OfferwallPointDelegate?
  @objc public static func initWithPubkeyAndUsrkey(_ pubkey: Swift.String, _ userkey: Swift.String) -> PincruxOfferwall.PincruxOfferwallSDK
  @objc public static func shared() -> PincruxOfferwall.PincruxOfferwallSDK
  @objc public func startOfferwall(vc: UIKit.UIViewController)
  @objc public func startOfferwallDetailVC(vc: UIKit.UIViewController, appKey: Swift.String)
  @objc public func setOfferwallType(_ type: PincruxOfferwall.OfferwallType)
  @objc public func setViewControllerType(_ type: PincruxOfferwall.ViewControllerType)
  @objc public func setEnableTab(_ isTab: Swift.Bool)
  @objc public func setDisableCPS(_ disableCPS: Swift.Bool)
  @objc public func setOfferwallTitle(_ title: Swift.String)
  @objc public func setThemeColor(_ colorHex: Swift.String)
  @objc public func setEnableScrollTopButton(_ isTopBtt: Swift.Bool)
  @objc public func setAdDetail(_ adDetail: Swift.Bool)
  @objc public func setUnityOfferwall(_ unity: Swift.Bool)
  @objc public func setOrientationLandscape(_ isLandscape: Swift.Bool)
  @objc public func setDarkMode(_ currentDarkMode: PincruxOfferwall.DarkMode)
  @objc public func enterForeground()
  @objc public func setOfferwallCategory(_ category: PincruxOfferwall.OfferwallCategory)
  @objc public func getAdPoint()
  @objc deinit
}
extension PincruxOfferwall.PincruxOfferwallSDK : PincruxOfferwall.OfferwallViewTypeDelegate {
  @objc dynamic public func offerwallInitSuccess()
  @objc dynamic public func offerwallInitFailed(_ errCode: Swift.Int)
  @objc dynamic public func offerwallReceived(_ offerwallView: UIKit.UIView)
}
extension UIKit.UINavigationController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open var preferredStatusBarStyle: UIKit.UIStatusBarStyle {
    @objc get
  }
}
extension PincruxOfferwall.PopupObserve : Swift.Equatable {}
extension PincruxOfferwall.PopupObserve : Swift.Hashable {}
extension PincruxOfferwall.PopupStyle : Swift.Equatable {}
extension PincruxOfferwall.PopupStyle : Swift.Hashable {}
extension PincruxOfferwall.OfferwallType : Swift.Equatable {}
extension PincruxOfferwall.OfferwallType : Swift.Hashable {}
extension PincruxOfferwall.OfferwallType : Swift.RawRepresentable {}
extension PincruxOfferwall.DarkMode : Swift.Equatable {}
extension PincruxOfferwall.DarkMode : Swift.Hashable {}
extension PincruxOfferwall.DarkMode : Swift.RawRepresentable {}
extension PincruxOfferwall.ViewControllerType : Swift.Equatable {}
extension PincruxOfferwall.ViewControllerType : Swift.Hashable {}
extension PincruxOfferwall.ViewControllerType : Swift.RawRepresentable {}
extension PincruxOfferwall.OfferwallCategory : Swift.Equatable {}
extension PincruxOfferwall.OfferwallCategory : Swift.Hashable {}
extension PincruxOfferwall.OfferwallCategory : Swift.RawRepresentable {}
